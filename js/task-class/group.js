// ************************************ 1-01 ************************************

//1. Використовуючи конструкцію if... else,
//напишіть код, який буде запитувати:
//"Яке офіційне ім'я JavaScript?"
//Якщо користувач вводить "ECMAScript",
//то показати через сповіщення: "Вірно!"
//у протилежному випадку показати:"Не знаєте? ECMAScript!"

// -----------------------------------------------------------------------------

// const name = prompt("Яке офіційне ім'я JavaScript ? ");
// name === 'ECMAScript' ? alert('Вірно!') : alert('Не знаєте? ECMAScript!');

// ************************************ 1-02 ************************************

//За допомогою циклу for напишіть код,
// який буде виводити в консоль всі парні числа від min до max

// -----------------------------------------------------------------------------

// const makeEven = (min, max) => {
//   const even = [];
//   for (let number = min; number <= max; number += 1) {
//     if (number % 2 === 0) {
//       even.push(number);
//     }
//   }
//   console.table(even);
// };
// makeEven(2, 11);

// ************************************ 1-03 ************************************

// У змінній min лежить число від 0 до 59.
// Визначте, в яку чверть години потрапляє
// це число(у першу, другу, третю чи четверту).

// -----------------------------------------------------------------------------

// const getQuarter = () => {
//   let num = 0;
//   do {
//     num = prompt('Enter number from 0 to 59');
//   } while (num < 0 || num > 59);

//   switch (Math.floor(num / 15)) {
//     case 0:
//       console.log('1-st quarter');
//       break;
//     case 1:
//       console.log('2-nd quarter');
//       break;
//     case 2:
//       console.log('3-d quarter');
//       break;
//     default:
//       console.log('4-th quarter');
//   }
// };
// getQuarter();

// ************************************ 1-04 ************************************

//Дано рядок, що складається із символів, наприклад, 'abcde'.
// Перевірте, що першим символом цього рядка є буква 'a'.
// Якщо це так - виведіть 'так', інакше виведіть 'ні'.

// -----------------------------------------------------------------------------

// const checkLetter = (letter, string) => {
//   string.at(0) === letter ? console.log('Yes') : console.log('No');
// };
// checkLetter('a', 'adfsdfaas');

// ************************************ 1-05 ************************************

//При завантаженні сторінки користувачеві пропонується в prompt ввести число.
// Введення додається до значення змінної total.
//Операція введення числа триває до того часу,
//Поки користувач не натисне кнопку Cancel в prompt.
//Після того, як користувач припинив введення натиснувши на
//кнопку Cancel, показати alert з рядком "Загальна сума введених чисел дорівнює [число]."

// -----------------------------------------------------------------------------

// const getSum = () => {
//   let total = 0;
//   let number = 0;
//   do {
//     number = prompt('Enter any number');
//     if (Number(number) == number) {
//       total += Number(number);
//     }
//   } while (number !== null);
//   alert(`Total sum entered numbers is ${total}`);
// };
// getSum();

// ************************************ 2-01 ************************************

//Напишіть функцію logItems(array), яка приймає
//масив та використовує цикл for, який для кожного
//елемента масиву виводитиме повідомлення у форматі
//<номер елемента> - <значення елемента>
//Нумерація елементів має починатися з першого.

const genres = ['Jazz', 'Blues', 'Rock n Roll', 'Reggae', 'Rap'];

// ----------------------------------------------------------------------------- // const logItems = array => { for (let i = 0; i < array.length; i += 1) {console.log(`${i + 1} - ${array[i]}`); } };

// logItems(genres);

// ************************************ 2-02 ************************************

//Напишіть функцію findSmallerNumber(numbers) яка шукає найменше число в масиві.
//Додай перевірку що функція отримує масив
// const numbers = [2, 5, 35, 56, 12, 24, 7, 80, 3];
// function findSmallerNumber(numbers) {}

// -----------------------------------------------------------------------------

// const numbers = [2, 5, 35, 56, 12, 24, 7, 80, 3];
// function findSmallerNumber(numbers) {
//   const min = numbers.reduce((acc, num) => {
//     if (num < acc) {
//       acc = num;
//     }
//     return acc;
//   });
//   console.log(min);
// }

// function findSmallerNumber(numbers) {
//   Array.isArray(numbers)
//     ? console.log(Math.min(...numbers))
//     : console.log('No array found');
// }

// findSmallerNumber(numbers);

// ************************************ 2-03 ************************************

// У нас є масив фільмів. Фільмів всього 7, а унікальних режисерів 3.
// Тому нам потрібно перетворити цей масив на об'єкт ключами якого будуть режисери,
// а їх властивостями - масиви фільмів.E.g.
// { 'Christopher Nolan': ['Interstellar', 'Inception', 'The Dark Knight'] }

const movies = [
  { director: 'Christopher Nolan', title: 'Interstellar' },
  { director: 'Quentin Tarantino', title: 'Pulp Fiction' },
  { director: 'Christopher Nolan', title: 'Inception' },
  { director: 'Christopher Nolan', title: 'The Dark Knight' },
  { director: 'Martin Scorsese', title: 'Taxi driver' },
  { director: 'Quentin Tarantino', title: 'Inglorious Basterds' },
  { director: 'Martin Scorsese', title: 'Silence' },
];

// ----------------------------------------------------------------------------- // const collection = movies.reduce((acc, { director, title }) => {
// ----------------------------------------------------------------------------- //   if (!acc[director]) { acc[director] = []; } acc[director].push(title); return acc;}, {});

// console.table(collection);

// ************************************ 3-01 ************************************

// ************************************ 3-02 ************************************

// ************************************ 3-03 ************************************

// ************************************ 3-04 ************************************

// ************************************ 3-05 ************************************

// ************************************ 3-06 ************************************
